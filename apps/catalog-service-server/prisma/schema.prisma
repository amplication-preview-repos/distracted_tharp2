datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  addons      Addon[]
  createdAt   DateTime    @default(now())
  description String?
  id          String      @id @default(cuid())
  name        String?
  orderItems  OrderItem[]
  prices      Price[]
  updatedAt   DateTime    @updatedAt
}

model Addon {
  createdAt   DateTime    @default(now())
  description String?
  id          String      @id @default(cuid())
  name        String?
  orderItems  OrderItem[]
  prices      Price[]
  product     Product?    @relation(fields: [productId], references: [id])
  productId   String?
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  addon     Addon?   @relation(fields: [addonId], references: [id])
  addonId   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?
  price     Price?   @relation(fields: [priceId], references: [id])
  priceId   String?
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  quantity  Int?
  updatedAt DateTime @updatedAt
}

model Customer {
  createdAt DateTime @default(now())
  email     String?
  id        String   @id @default(cuid())
  name      String?
  orders    Order[]
  updatedAt DateTime @updatedAt
}

model Price {
  addon            Addon?      @relation(fields: [addonId], references: [id])
  addonId          String?
  addonRelation    String?
  amount           Float?
  createdAt        DateTime    @default(now())
  currency         String?
  currencyType     String?
  id               String      @id @default(cuid())
  orderItems       OrderItem[]
  product          Product?    @relation(fields: [productId], references: [id])
  productId        String?
  productRelation  String?
  relatesToAddon   String?
  relatesToProduct String?
  updatedAt        DateTime    @updatedAt
  value            Float?
}

model Order {
  createdAt  DateTime    @default(now())
  customer   Customer?   @relation(fields: [customerId], references: [id])
  customerId String?
  id         String      @id @default(cuid())
  orderDate  DateTime?
  orderItems OrderItem[]
  updatedAt  DateTime    @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}
